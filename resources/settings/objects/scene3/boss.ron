#![enable(implicit_some)]
{
    "Boss": (
        spritesheet: "scene3/boss.png",
        components: [
            Size((
                w: 64.0,
                h: 64.0,
            )),
            Animations({
                Idle: Cycle([
                    (10, 200),
                    (11, 200),
                ]),
                Walk: Cycle([
                    (20, 100),
                    (21, 100),
                    (22, 250),
                    (23, 100),
                    (24, 100),
                    (25, 100),
                    (26, 100),
                    (27, 250),
                    (28, 100),
                    (29, 100),
                ]),
                Custom("Shout"): Once([
                    (30, 150),
                    (31, 150),
                    (30, 150),
                    (31, 150),
                    (30, 150),
                    (31, 150),
                ]),
            }),
            Gravity((
                y: -800.0,
            )),
            Hitbox(Size),
            Solid((
                tag: Player,
            )),
            Collider((
                tag: Boss,
            )),
            Collidable((
                tag: Boss,
            )),
            Hitbox(Size),
            Interactable(()),
            TextLines({
                "Greet": (
                    lines: [
                        "You're late.\nNow get to work!",
                    ],
                    behavior: Sequence(loop: false),
                ),
                "Button": (
                    lines: [
                        "Stop slacking off and get back to work.\nThe button on your desk requires some pressing!",
                        "That lovely red button won't press itself...",
                        "It's quite simple, you see...",
                        "You're the dedicated button presser and there's a button that need pressing.",
                        "\"Overqualified?\" What's that supposed to mean, smart-ass?",
                        "The button, Turtle-Man, THE BUTTON!",
                        "Stop ignoring your boss and press. The. BUTTON.",
                        "Do what I am paying you for and PRESS THE BUTTON.",
                        "What was that? I'm not paying you? So what?",
                        "THE BUTTON, TURTLE-MAN, PRESS THE GODDAMN BUTTOOOONNNNN! AAAARRRRGH!!!",
                        "AAAAAAAAARSDFRHSDLIFNJSNR",
                        "AAAAAAAAAAAAAAOLKUJLKLKLSDLKMFLKSNDFLKJNDSF",
                    ],
                    behavior: Sequence(loop: false),
                ),
                "Coffee": (
                    lines: [
                        "Now make me a cup of coffee, will you?",
                        "Did you not hear me, Turtle-Man? I desire a cup of coffee.",
                        "Funny, I could swear I just asked for a cup of coffee.",
                        "Don't make me repeat myself.",
                        "Are you deaf, kid? I SAID COFFEE.",
                        "Coffee. Now.",
                        "Where. Is. My. COFFEE?!",
                        "DO YOU NEED ME TO SPELL IT OUT FOR YOU? C - O - F....",
                        "COFFEE. COFFEE.",
                        "Coffee... Coffee....... COFFEEEEEEEEEEEE!",
                        "COFFEE. NOW. AAAAARRRGHGH",
                        "AAAAAAAAARHRHRHGHGHGGGGGGHHRHR",
                    ],
                    behavior: Sequence(loop: false),
                ),
                "TaskComplete": (
                    lines: [
                        "Excellent.",
                        "Good enough.",
                    ],
                    behavior: Random,
                ),
                "DayComplete": (
                    lines: [
                        "That's it for today.\nNow get out of here.",
                    ],
                    behavior: Random,
                ),
            }),
            Velocity((x: 0.0, y: 0.0)),
        ],

        events: {
            Init: [
                SetVariable("reached_desk", false),
                SetVariable("current_task", ""),
                SetVariable("task_loops", 0),
                SetVariable("day_complete", false),
                ForeignObjectAction(Player, [SetControllable(false)]),
                StartTimer("InitGreet", 1000),
            ],

            OnTimerFinish("InitGreet"): [
                FaceTowardsObject(Player),
                StartTimer("Greet", 1000),
            ],

            OnTimerFinish("Greet"): [
                OutputNextLine(
                    id: "Greet",
                    scroll: true,
                ),
                StartTimer("Speek", 0),
                ForeignObjectAction(Player, [SetControllable(true)]),
                StartTimer("StartMovingToDesk", 2000),
            ],

            OnTimerFinish("StartMovingToDesk"): [
                SetVelocity(x: 24.0),
            ],

            OnCollision(And([IsTag(BossTableHitbox), IsState(Enter)])): [
                SetVariable("reached_desk", true),
                SetVelocity(x: 0.0),
            ],

            OnCollision(IsTag(Player)): [
                If(If((
                    if: And([
                        Equal(Var("reached_desk"), Val(true)),
                        Equal(Var("day_complete"), Val(false)),
                        Equal(Var("current_task"), Val("")),
                    ]),
                    then: [
                        SetVariable("current_task", "Button"),
                        OutputNextLine(
                            id: "Button",
                            scroll: true,
                        ),
                        StartTimer("Speek", 0),
                        StartTimer("Button", 8000),
                    ],
                ))),
            ],

            OnTimerFinish("DemandTask"): [
                If(If((
                    if: Not(Equal(Var("current_task"), Val(""))),
                    then: [
                        If(IfElseChain((
                            branches: [
                                (
                                    if: Equal(Var("current_task"), Val("Button")),
                                    then: [
                                        OutputNextLine(
                                            id: "Button",
                                            scroll: true,
                                        ),
                                    ],
                                ),
                                (
                                    if: Equal(Var("current_task"), Val("Coffee")),
                                    then: [
                                        OutputNextLine(
                                            id: "Coffee",
                                            scroll: true,
                                        ),
                                    ],
                                ),
                            ],
                        ))),
                        StartTimer("Speek", 0),
                        StartTimer("CheckFail", 0),
                        StartTimer("DemandTask", 4000),
                    ],
                ))),
            ],

            OnTimerFinish("ButtonPressed"): [
                If(If((
                    if: Equal(Var("current_task"), Val("Button")),
                    then: [
                        SetVariable("current_task", "Coffee"),
                        ResetOutputLines( id: "Button" ),
                        OutputNextLine(
                            id: "TaskComplete",
                            scroll: true,
                        ),
                        StartTimer("Speek", 0),
                        StartTimer("DemandTask", 2000),
                    ],
                ))),
            ],

            OnTimerFinish("CoffeeMake"): [
                If(If((
                    if: Equal(Var("current_task"), Val("Coffee")),
                    then: [
                        SetVariable("current_task", "Button"),
                        ResetOutputLines( id: "Coffee" ),
                        OutputNextLine(
                            id: "TaskComplete",
                            scroll: true,
                        ),
                        StartTimer("Speek", 0),
                        StartTimer("DemandTask", 2000),
                        ForeignObjectAction(Custom("Clock"), [StartTimer("NextAnim", 0)]),
                        OpAddVariable("task_loops", 1),
                        StartTimer("CheckComplete", 0),
                    ],
                ))),
            ],

            OnTimerFinish("CheckFail"): [
                If(If((
                    if: Or([
                        GreaterThan(TextLinesIdx("Button"), Val(11)),
                        GreaterThan(TextLinesIdx("Coffee"), Val(11)),
                    ]),
                    then: [
                        StopTimer("DemandTask"),
                        Hide,
                        StopSong(MainBgm),
                        PlaySong(HappyTrack),
                        PlaySound("BossScream4"),
                        ForeignObjectAction(Custom("BossSplooch"), [
                            Show,
                        ]),
                        StartTimer("Delete", 100),
                    ],
                ))),
            ],

            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],

            OnTimerFinish("CheckComplete"): [
                If(If((
                    if: GreaterThan(Var("task_loops"), Val(2)),
                    then: [
                        StopTimer("DemandTask"),
                        StartTimer("DayComplete", 2000),
                    ],
                ))),
            ],

            OnTimerFinish("DayComplete"): [
                SetVariable("day_complete", true),
                SetVariable("current_task", ""),
                OutputNextLine(
                    id: "DayComplete",
                    scroll: true,
                ),
                StartTimer("Speek", 0),
                ForeignObjectAction(Custom("OfficeDoor"), [SetVariable("can_leave", true)]),
            ],

            OnTimerFinish("Speek"): [
                PushAnimation(Custom("Shout")),
                RandomAction([
                    [PlaySound("BossScream1")],
                    [PlaySound("BossScream2")],
                ]),
                FaceTowardsObject(Player),
            ],
        },
    ),
}
