// src/settings/objects_settings.rs
#![enable(implicit_some)]
{
    "Solid": (
        spritesheet: "tilesets/colors.png",
        components: [
            Animations({
                Idle: Cycle([(3, 1000)]),
            }),
            Collidable((
                tag: Solid,
            )),
            Solid((
                tag: Solid,
            )),
            Hitbox(Size),
        ],
    ),

    // -------
    // SCENE 1
    // -------

    "Plant": (
        spritesheet: "scene1/plant.png",
        components: [
            Size((
                w: 24.0,
                h: 32.0,
            )),
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
            Animations({ Idle: Cycle([ (6, 1000), ]), }),
            InLoop(0, [ Animations({ Idle: Cycle([ (0, 1000), ]), }), ]),
            InLoop(1, [ Animations({ Idle: Cycle([ (1, 1000), ]), }), ]),
            InLoop(2, [ Animations({ Idle: Cycle([ (2, 1000), ]), }), ]),
            InLoop(3, [ Animations({ Idle: Cycle([ (3, 1000), ]), }), ]),
            InLoop(4, [ Animations({ Idle: Cycle([ (4, 1000), ]), }), ]),
            InLoop(5, [ Animations({ Idle: Cycle([ (5, 1000), ]), }), ]),
            InLoop(6, [ Animations({ Idle: Cycle([ (6, 1000), ]), }), ]),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: "Huxley has seen better days, but he's a fighter.",
                ),
            ],
        },
    ),

    "Shoes": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
            TextLines({
                "Inspect": (
                    lines: [
                        "A pair of comically large loafers. They were passed down to me by my uncle.",
                        "A pair of loafers. They don't quite fit.",
                    ],
                    behavior: Sequence(loop: true),
                ),
            }),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                OutputNextLine(
                    id: "Inspect",
                ),
            ],
        },
    ),

    "Painting": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: "This has been here for as long as I remember.\nThe years have left it stained with a thick, yellow tint.",
                ),
            ],
        },
    ),

    "Filth": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: "Filth.",
                ),
            ],
        },
    ),

    "Bed": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
            TextLines({
                "Inspect": (
                    lines: [
                        "My only friend.",
                        "I feel as if the cozy sheets are calling for me.",
                    ],
                    behavior: Sequence(loop: true),
                ),
            }),
        ],

        events: {
            OnInteract: [
                If((
                    if: Equal(
                        ForeignObjectValue(Player, Var("is_controllable")),
                        Val(true),
                    ),
                    then: [
                        PlaySound("Interact"),
                        OutputNextLine(
                            id: "Inspect",
                        ),
                    ],
                    else: [
                        ForeignObjectAction(
                            Player,
                            [
                                SetControllable(true),
                                SetVariable("is_controllable", true),
                                ClearOutput(
                                    target: "ingame_output_text_get_up",
                                ),
                            ],
                        ),
                        ForeignObjectAction(Custom("Alarm"), [
                            StartTimer("StopAlarm", 0),
                        ]),
                    ],
                )),
            ],
        },
    ),

    "Door": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            Init: [
                SetVariable("can_exit", false),
            ],

            OnInteract: [
                If((
                    if: Equal(Var("can_exit"), Val(true)),
                    then: [
                        PlaySound("SceneTransition"),
                        ForeignObjectAction(Player, [SetControllable(false)]),
                        Fade((
                            type: FadeOut,
                            duration_ms: 500,
                        )),
                        StartTimer("NextScene", 1000),
                    ],
                    else: [
                        SetVariable("can_exit", true),
                        Echo("Can't leave yet!"),
                    ],
                )),
            ],

            OnTimerFinish("NextScene"): [
                NextScene,
            ],
        },
    ),

    "Alarm": (
        spritesheet: "alarm.png",
        components: [
            Size((
                w: 32.0,
                h: 48.0,
            )),
            Collidable((
                tag: Interactable,
            )),
            Hitbox(Custom([
                (
                    top:    0.0,
                    bottom: 24.0,
                    left:   -16.0,
                    right:  4.0,
                ),
            ])),
            Animations({
                Idle: Cycle([
                    (0, 1000),
                ]),
                Custom("Ring"): Cycle([
                    (48, 500),
                    (49, 500),
                ]),
            }),
            Interactable(()),
            TextLines({
                "Ring": (
                    lines: [
                        "Ring Ring",
                        "Ring Ring",
                        "Ring Ring",
                        "Ring Ring",
                        "Ring Ring",
                        "Ringggg.... ringg....... ring?",
                        "Hello-oh! Anyone home?",
                        "Rise and shine, buddy!",
                        "Goodmorning sunshine! Time to greet another beautiful day!",
                        "<name>? I'm right here, buddy.",
                        "Press me :)",
                        "Press me. That's how clocks work, you know?",
                        "You DO know, right?",
                        "Press me. That's how clocks work, in case you forgot.",
                        "Obey me, mortal, or suffer the conseque-",
                        "*Press me buddy :)",
                        "...",
                        "press me. now.",
                        "PRESS ME. NOW.",
                        "PRESS ME YOU ****" ,
                        "PRESS ME YOU ****** *** OR I WILL ******** AND ***** *** YOUR ****** YOU ***** *******",
                        "****** **** *** ***** **** ***** *** ***** **** ******* ******",
                    ],
                    behavior: Sequence(loop: false),
                ),
            }),
        ],

        events: {
            Init: [
                SetVariable("text_idx", 0),
                SetVariable("intense_shake", false),
                SetVariable("alarm_fight", false),
                PlayAnimation(Custom("Ring")),
                StartTimer("Text", 500),
                StartTimer("Sound", 500),
            ],

            OnTimerFinish("Text"): [
                If((
                    if: LessThan(Var("text_idx"), Val(5)),
                    then: [
                        OutputNextLine(
                            id: "Ring",
                            scroll: true,
                        ),
                        StartTimer("Text", 2000),
                    ],
                    else: [
                        If((
                            if: LessThan(Var("text_idx"), Val(15)),
                            then: [
                                OutputNextLine(
                                    id: "Ring",
                                    scroll: true,
                                ),
                                StartTimer("Text", 4000),
                            ],
                            else: [
                                If((
                                    if: Equal(Var("text_idx"), Val(15)),
                                    then: [
                                        // obey me
                                        OutputNextLine(
                                            id: "Ring",
                                            scroll: true,
                                        ),
                                        StartTimer("Text", 1800),
                                    ],
                                    else: [
                                        If((
                                            if: Equal(Var("text_idx"), Val(16)),
                                            then: [
                                                // after obey me
                                                OutputNextLine(
                                                    id: "Ring",
                                                ),
                                                StartTimer("Text", 4000),
                                            ],
                                            else: [
                                                If((
                                                    if: Equal(Var("text_idx"), Val(19)),
                                                    then: [
                                                        SetVariable("intense_shake", true),
                                                    ],
                                                )),
                                                If((
                                                    if: GreaterThan(Var("text_idx"), Val(21)),
                                                    then: [
                                                        OutputNextLine(
                                                            id: "Ring",
                                                            scroll: true,
                                                        ),
                                                        StartTimer("StartFight", 4000),
                                                    ],
                                                    else: [
                                                        OutputNextLine(
                                                            id: "Ring",
                                                            scroll: true,
                                                        ),
                                                        StartTimer("Text", 4000),
                                                    ],
                                                )),
                                            ],
                                        )),
                                    ],
                                )),
                            ],
                        )),
                    ],
                )),
                StartTimer("CountTextIdx", 10),
            ],

            OnTimerFinish("CountTextIdx"): [
                OpAddVariable("text_idx", 1),
            ],

            OnTimerFinish("Sound"): [
                If((
                    if: Equal(Var("intense_shake"), Val(true)),
                    then: [
                        ScreenShake((
                            duration_ms: 670,
                            strength: 4.0,
                            shake_delay_ms: 5,
                        )),
                    ],
                    else: [
                        ScreenShake((
                            duration_ms: 670,
                            strength: 0.5,
                            shake_delay_ms: 10,
                        )),
                    ],
                )),
                PlaySound("Alarm"),
                StartTimer("Sound", 1000),
            ],

            OnTimerFinish("StopAlarm"): [
                PlayAnimation(Idle),
                StopTimer("Text"),
                StopTimer("Sound"),
                PlaySound("Interact"),
                ClearOutput(),
            ],

            OnTimerFinish("StartFight"): [
                SetVariable("alarm_fight", true),
                ForeignObjectAction(Custom("BgFragment1"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment2"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment3"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment4"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment5"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment6"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment7"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment8"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment9"), [StartTimer("StartFight", 0)]),
                ForeignObjectAction(Custom("BgFragment10"), [StartTimer("StartFight", 0)]),
                SetOutput(
                    text: "YOU SHOULD HAVE LISTENED!!!",
                    scroll: true,
                ),
            ],
        },
    ),

    // ---

    // -------
    // SCENE 3
    // -------

    "Scene3Bg": (
        spritesheet: "scene3/bg.png",
        components: [
            Size((
                w: 512.0,
                h: 144.0,
            )),
        ],
    ),

    "Dustbin": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: "A dustbin.\nIt's offensively generic.",
                ),
                ForeignObjectAction(Custom("Coworker1"), [
                    PushAnimation(Custom("HeadScratch")),
                ]),
            ],
        },
    ),

    "DustbinBloody": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: "A dustbin.\nIt's got some Charlie on it.",
                ),
            ],
        },
    ),

    "Locker": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: r#"The Boss's locker.
Its doors are permanently locked.
I tremble at the thought of what horrors may lie behind them."#,
                ),
            ],
        },
    ),

    "Whiteboard": (
        spritesheet: "scene3/whiteboard.png",

        components: [
            Size((
                w: 56.0,
                h: 32.0,
            )),
            Animation([(1, 1000)]),
            InLoop(0, [Animation([(0, 1000)])])
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                SetOutput(
                    text: ""
                ),
            ],
        },
    ),

    "TableBg": (
        spritesheet: "scene3/table_bg.png",
        components: [
            Size((
                w: 48.0,
                h: 48.0,
            )),
            Animation([
                (0, 3000),
                (1, 3000),
                (2, 3000),
                (3, 3000),
            ]),
        ],
    ),

    "TableFg": (
        spritesheet: "scene3/table_fg.png",
        components: [
            Size((
                w: 48.0,
                h: 48.0,
            )),
            Animation([(0, 1000)]),
        ],
    ),

    "Coworker1": (
        spritesheet: "scene3/coworker_1.png",
        components: [
            Size((
                w: 32.0,
                h: 32.0,
            )),
            Animations({
                Idle: Cycle([
                    (0, 400),
                    (1, 400),
                ]),
                Custom("Talk"): Once([
                    (0, 100),
                    (1, 100),
                    (0, 100),
                    (1, 100),
                    (0, 100),
                    (1, 100),
                    (0, 100),
                    (1, 100),
                ]),
                Custom("HeadScratch"): Once([
                    (10, 100),
                    (11, 100),
                    (12, 100),
                    (13, 100),
                    (14, 100),
                    (15, 100),
                    (16, 100),
                    (17, 100),
                    (18, 500),
                ]),
            }),
            Hitbox(Custom([
                (
                    top:    16.0,
                    bottom: -16.0,
                    left:   -10.0,
                    right:  10.0,
                ),
            ])),
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
        ],

        events: {
            OnInteract: [
                PlaySound("Interact"),
                PlaySound("BossScream1"),
                PushAnimation(Custom("Talk")),
                SetOutput(
                    text: "The boss is having one of his episodes again.\nEarlier he threw a dustbin at Charlie.",
                    scroll: true,
                ),
                FaceTowardsObject(Player),
            ],
        },
    ),

    "OfficeDoor": (
        components: [
            Collidable((
                tag: Interactable,
            )),
            Interactable(()),
            Hitbox(Size),
        ],

        events: {
            OnInteract: [
                PlaySound("SceneTransition"),
                ForeignObjectAction(Player, [SetControllable(false)]),
                Fade((
                    type: FadeOut,
                    duration_ms: 500,
                )),
                StartTimer("NextScene", 1000),
            ],

            OnTimerFinish("NextScene"): [
                NextScene,
            ],
        },
    ),

    "Boss": (
        spritesheet: "scene3/boss.png",
        components: [
            Size((
                w: 64.0,
                h: 64.0,
            )),
            Animations({
                Idle: Cycle([
                    (10, 200),
                    (11, 200),
                ]),
                Walk: Cycle([
                    (20, 100),
                    (21, 100),
                    (22, 250),
                    (23, 100),
                    (24, 100),
                    (25, 100),
                    (26, 100),
                    (27, 250),
                    (28, 100),
                    (29, 100),
                ]),
            }),
            Gravity((
                y: -800.0,
            )),
            Hitbox(Size),
            Solid((
                tag: Player,
            )),
            Collider((
                tag: Boss,
            )),
            Collidable((
                tag: Boss,
            )),
            Hitbox(Size),
            Interactable(()),
            TextLines({
                "Greet": (
                    lines: [
                        "You're finally here.\nGet your ass over here!",
                    ],
                    behavior: Sequence(loop: false),
                ),
                "Coffee": (
                    lines: [
                        "Make me a cup of coffee, will you?",
                        "Did you not hear me, <name>? I desire a cup of coffee.",
                        "Funny, I could swear I just asked for a cup of coffee.",
                        "Don't make me repeat myself.",
                        "Are you deaf, kid? I SAID COFFEE.",
                        "Coffee. Now.",
                        "Where. Is. My. COFFEE?!",
                        "DO YOU NEED ME TO SPELL IT OUT FOR YOU? C - O - F....",
                        "COFFEE! COFFEE!",
                        "Coffee... Coffee....... COFFEEEEEEEEEEEE!",
                        "COFFE. NOW. AAAAARRRGHGH",
                        "AAAAAAAAARHRHRHGHGHGGGGGGHHRHR",
                        "AAAAAAAAAAAAAAAAAAAAAOLJFNSDLKFNJSLAOLIKSDOLKFJNKSJDNFKJS",
                    ],
                    behavior: Sequence(loop: false),
                ),
            }),
            Velocity((x: 0.0, y: 0.0)),
        ],

        events: {
            Init: [
                OutputNextLine(
                    id: "Greet",
                    scroll: true,
                ),
                PlaySound("BossScream1"),
                StartTimer("StartMovingToDesk", 1000),
            ],

            OnTimerFinish("StartMovingToDesk"): [
                SetVelocity(x: 24.0),
            ],

            OnCollision(And([IsTag(BossTableHitbox), IsState(Enter)])): [
                SetVelocity(x: 0.0),
                StartTimer("Coffee", 0),
            ],

            // OnInteract: [
            //     StartTimer("Coffee", 0),
            // ],

            OnTimerFinish("Coffee"): [
                OutputNextLine(
                    id: "Coffee",
                    scroll: true,
                ),
                PlaySound("BossScream2"),
                StartTimer("Coffee", 3000),
            ],
        },
    ),

    "BossTableHitbox": (
        components: [
            Hitbox(Size),
            Collidable((
                tag: BossTableHitbox,
            )),
        ],
    ),

    // ------------
    // BG FRAGMENTS
    // ------------

    "BgFragment1": (
        spritesheet: "scene1/bg_fragments/bgf1.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    x: -60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment2": (
        spritesheet: "scene1/bg_fragments/bgf2.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    y: -60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment3": (
        spritesheet: "scene1/bg_fragments/bgf3.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    x: -60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment4": (
        spritesheet: "scene1/bg_fragments/bgf4.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    y: 60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment5": (
        spritesheet: "scene1/bg_fragments/bgf5.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    y: -60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment6": (
        spritesheet: "scene1/bg_fragments/bgf6.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    x: -60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment7": (
        spritesheet: "scene1/bg_fragments/bgf7.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    y: 60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment8": (
        spritesheet: "scene1/bg_fragments/bgf8.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    x: 60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment9": (
        spritesheet: "scene1/bg_fragments/bgf9.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    y: 60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
    "BgFragment10": (
        spritesheet: "scene1/bg_fragments/bgf10.png",
        components: [
            Velocity(( x: 0.0, y: 0.0 )),
        ],
        events: {
            OnTimerFinish("StartFight"): [
                SetVelocity(
                    x: 60.0,
                ),
                StartTimer("Delete", 10000),
            ],
            OnTimerFinish("Delete"): [
                DeleteEntity,
            ],
        },
    ),
}
